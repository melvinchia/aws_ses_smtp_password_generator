<!DOCTYPE html>
<html>
<head>
  <title>AWS SES SMTP Password Generator</title>
  <style>
    body { font-family: Arial, sans-serif; padding: 20px; }
    input, textarea { width: 100%; padding: 10px; margin: 10px 0; }
    button { padding: 10px 20px; }
    .output { background: #f4f4f4; padding: 10px; border-radius: 5px; }
  </style>
</head>
<body>
  <h2>AWS SES SMTP Password Generator</h2>
  <label for="secretKey">AWS Secret Access Key:</label>
  <input type="text" id="secretKey" placeholder="Enter your AWS secret access key">

  <label for="region">AWS Region (e.g., us-east-1):</label>
  <input type="text" id="region" placeholder="Enter AWS region">

  <button onclick="generateSMTPPassword()">Generate SMTP Password</button>

  <h3>SMTP Password:</h3>
  <div class="output" id="output"></div>

  <script>
    async function generateSMTPPassword() {
      const secretKey = document.getElementById('secretKey').value.trim();
      const region = document.getElementById('region').value.trim();
      const output = document.getElementById('output');

      if (!secretKey || !region) {
        output.textContent = "Please enter both secret key and region.";
        return;
      }

      const cryptoKey = await crypto.subtle.importKey(
        "raw",
        new TextEncoder().encode(secretKey),
        { name: "HMAC", hash: "SHA-256" },
        false,
        ["sign"]
      );

      const message = "SendRawEmail";
      const date = "11111111";
      const service = "ses";
      const terminal = "aws4_request";
      const regionBytes = new TextEncoder().encode(region);

      // AWS's SMTP password derivation process
      const sign = async (key, msg) => {
        const cryptoKey = await crypto.subtle.importKey("raw", key, { name: "HMAC", hash: "SHA-256" }, false, ["sign"]);
        return new Uint8Array(await crypto.subtle.sign("HMAC", cryptoKey, new TextEncoder().encode(msg)));
      };

      const kDate = await sign(new TextEncoder().encode("AWS4" + secretKey), date);
      const kRegion = await sign(kDate, region);
      const kService = await sign(kRegion, service);
      const kSigning = await sign(kService, terminal);
      const smtpPassword = await sign(kSigning, message);

      const final = new Uint8Array([0x02, ...smtpPassword]);
      const base64 = btoa(String.fromCharCode(...final));

      output.textContent = base64;
    }
  </script>
</body>
</html>
